{"version":3,"file":"static/js/114.9fb9cfdc.chunk.js","mappings":"sPAAaA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,ECAzBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,iDCIzBC,EAAcC,EAAAA,GAAAA,IAAH,8MAQF,qBAAGC,MAAkBC,OAAOC,SAA5B,IAITC,EAAOJ,EAAAA,GAAAA,EAAH,gIAKN,qBAAGC,MAAkBC,OAAOG,WAA5B,IAGEC,EAAQN,EAAAA,GAAAA,EAAH,wHAKP,qBAAGC,MAAkBC,OAAOK,aAA5B,IAGEC,EAAWR,EAAAA,GAAAA,GAAH,oHAORS,EAAcT,EAAAA,GAAAA,GAAH,8EAMXU,EAAgBV,EAAAA,GAAAA,OAAH,mSAUJ,qBAAGC,MAAkBC,OAAOS,YAA5B,IAIE,SAAAC,GAAK,OACvBA,EAAMC,OAASC,EAAAA,EAAAA,UAAiBA,EAAAA,EAAAA,WADT,IAKhBC,GAAaf,EAAAA,EAAAA,IAAOgB,EAAAA,IAAPhB,CAAH,uCACZ,qBAAGC,MAAkBC,OAAOe,KAA5B,IAGEC,GAAWlB,EAAAA,EAAAA,IAAOmB,EAAAA,IAAPnB,CAAH,uCACV,qBAAGC,MAAkBC,OAAOe,KAA5B,I,mBCxDJ,SAASG,EAAT,GAA2D,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC/C,OACE,UAACxB,EAAD,YACE,SAACyB,EAAA,EAAD,CAAQC,KAAK,MAAMC,MAAO,CAAEC,SAAU,WAAYC,KAAM,UACxD,4BACE,SAACxB,EAAD,UAAOiB,EAAQQ,QACf,SAACvB,EAAD,UAAQe,EAAQS,aAGlB,UAACtB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEqB,KAAK,SACLC,MAAM,eACNC,QAAS,kBACPV,EAAaF,EAAQa,GAAIb,EAAQQ,KAAMR,EAAQS,OADxC,EAHX,UAOE,SAACZ,EAAD,CAAUO,KAAK,YAGnB,SAAChB,EAAD,WACE,SAACC,EAAD,CACEG,QAAM,EACNkB,KAAK,SACLC,MAAM,iBACNC,QAAS,kBAAMX,EAAaD,EAAQa,GAA3B,EAJX,UAME,SAACnB,EAAD,CAAYU,KAAK,gBAM5B,CCrCc,SAASU,IACtB,IAAMxC,GAAWyC,EAAAA,EAAAA,IAAY3C,GACvB4C,GAAcD,EAAAA,EAAAA,IAAYvC,GAC1ByC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,MACV,GAAE,CAACL,IAEJ,IAAMf,EAAe,SAACW,EAAIL,EAAMC,GAC9BU,EAAS,aAAD,OAAcN,EAAd,YAAoBL,EAApB,YAA4BC,GACrC,EAEKR,EAAe,SAAAY,GACnBI,GAASM,EAAAA,EAAAA,IAAcV,GACxB,EAEKW,EAAmBR,EAAYS,cAC/BC,EAAe,OAAGpD,QAAH,IAAGA,OAAH,EAAGA,EAAUG,QAAO,SAAAuB,GAAO,OAC9CA,EAAQQ,KAAKiB,cAAcE,SAASH,EADU,IAIhD,OACE,iCACE,SAAC,KAAD,WACE,2CAEF,wBACGE,IAAoB,IACnBA,EAAgBE,KAAI,SAAA5B,GAAO,OACzB,yBACE,SAACD,EAAD,CACEC,QAASA,EACTE,aAAcA,EACdD,aAAcA,KAJTD,EAAQa,GADQ,QAYpC,C","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectAllContacts = state => state.contacts.items;\n\nexport const selectContactById = state => state.items();\n","export const selectFilterValue = state => state.filter;\n","import styled from 'styled-components';\nimport { vars } from 'constants/varialbles';\nimport { MdRemove, MdEdit } from 'react-icons/md';\n\nexport const ContactBody = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0 24px 0 220px;\n  overflow: hidden;\n\n  height: 96px;\n  border: 2px solid ${({ theme }) => theme.colors.outsideBg};\n  border-radius: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 0 0 2px 0;\n  font-family: 'Roboto';\n  font-size: 32px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const Phone = styled.p`\n  margin: 0;\n  font-family: 'Roboto';\n  font-size: 24px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n\nexport const Controls = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n`;\n\nexport const ControlItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 16px;\n  }\n`;\n\nexport const ControlButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.controlsGrey};\n\n  &:hover,\n  &:focus {\n    background-color: ${props =>\n      props.delete ? vars.dangerRed : vars.accentColor};\n  }\n`;\n\nexport const RemoveIcon = styled(MdRemove)`\n  color: ${({ theme }) => theme.colors.appBg};\n`;\n\nexport const EditIcon = styled(MdEdit)`\n  color: ${({ theme }) => theme.colors.appBg};\n`;\n","import {\n  ContactBody,\n  Name,\n  Phone,\n  Controls,\n  ControlItem,\n  ControlButton,\n  RemoveIcon,\n  EditIcon,\n} from './Contact.styled';\nimport { Avatar } from 'components/Avatar/Avatar';\n// import { vars } from 'constants/varialbles';\n\nexport function Contact({ contact, handleRemove, handleUpdate }) {\n  return (\n    <ContactBody>\n      <Avatar size=\"244\" style={{ position: 'absolute', left: '-48' }} />\n      <div>\n        <Name>{contact.name}</Name>\n        <Phone>{contact.number}</Phone>\n      </div>\n\n      <Controls>\n        <ControlItem>\n          <ControlButton\n            type=\"button\"\n            title=\"Edit Contact\"\n            onClick={() =>\n              handleUpdate(contact.id, contact.name, contact.number)\n            }\n          >\n            <EditIcon size=\"28\" />\n          </ControlButton>\n        </ControlItem>\n        <ControlItem>\n          <ControlButton\n            delete\n            type=\"button\"\n            title=\"Delete Contact\"\n            onClick={() => handleRemove(contact.id)}\n          >\n            <RemoveIcon size=\"88\" />\n          </ControlButton>\n        </ControlItem>\n      </Controls>\n    </ContactBody>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Helmet } from 'react-helmet-async';\nimport { Contact } from 'components/Contact/Contact';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectAllContacts);\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleUpdate = (id, name, number) => {\n    navigate(`/contacts/${id}/${name}/${number}`);\n  };\n\n  const handleRemove = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const normalizedFilter = filterValue.toLowerCase();\n  const visibleContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ul>\n        {visibleContacts !== [] &&\n          visibleContacts.map(contact => (\n            <li key={contact.id}>\n              <Contact\n                contact={contact}\n                handleUpdate={handleUpdate}\n                handleRemove={handleRemove}\n              />\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["selectAllContacts","state","contacts","items","selectFilterValue","filter","ContactBody","styled","theme","colors","outsideBg","Name","primaryText","Phone","secondaryText","Controls","ControlItem","ControlButton","controlsGrey","props","delete","vars","RemoveIcon","MdRemove","appBg","EditIcon","MdEdit","Contact","contact","handleRemove","handleUpdate","Avatar","size","style","position","left","name","number","type","title","onClick","id","ContactsPage","useSelector","filterValue","dispatch","useDispatch","navigate","useNavigate","useEffect","fetchContacts","deleteContact","normalizedFilter","toLowerCase","visibleContacts","includes","map"],"sourceRoot":""}