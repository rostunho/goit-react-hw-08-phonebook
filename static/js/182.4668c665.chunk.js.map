{"version":3,"file":"static/js/182.4668c665.chunk.js","mappings":"4LAEaA,E,QAAkBC,GAAAA,GAAH,4GAIjB,qBAAGC,MAAkBC,OAAOC,aAA5B,I,SCJJ,SAASC,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAClC,OAAO,SAACP,EAAD,CAAiBO,MAAOA,EAAxB,SAAgCD,GACxC,C,sECFYE,E,QAAcP,GAAAA,GAAH,4GAIb,qBAAGC,MAAkBC,OAAOM,WAA5B,I,SCJJ,SAASC,EAAT,GAAmC,IAAhBJ,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9B,OAAO,SAACC,EAAD,CAAaD,MAAOA,EAApB,SAA4BD,GACpC,C,4FCDYK,EAAcV,EAAAA,GAAAA,MAAH,uJAOb,qBAAGC,MAAkBC,OAAOC,aAA5B,IAGEQ,EAAcX,EAAAA,GAAAA,MAAH,4YAUb,qBAAGC,MAAkBC,OAAOM,WAA5B,IACW,qBAAGP,MAAkBC,OAAOU,KAA5B,IAGhB,gBAAGX,EAAH,EAAGA,MAAH,SAAUY,aACKC,EAAAA,EAAAA,YAAmBb,EAAMC,OAAOa,UAD/C,IAMc,qBAAGd,MAAkBC,OAAOc,UAA5B,I,SC/Bb,SAASC,EAAT,GAQH,IAPFC,EAOC,EAPDA,MACAC,EAMC,EANDA,KACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACAV,EACC,EADDA,aAEA,OACE,UAACH,EAAD,WACGQ,GACD,SAACP,EAAD,CACEQ,KAAMA,EACNC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVV,aAAcA,MAIrB,C,qLCbc,SAASW,IACtB,IAAQC,GAAeC,EAAAA,EAAAA,KAAfD,WACFE,GAAWC,EAAAA,EAAAA,MAuBjB,OAAIH,GACK,SAAC,KAAD,CAAUI,GAAG,eAIpB,iCACE,SAAC,KAAD,WACE,yCAEF,SAAC,IAAD,CAASxB,KAAK,uBAAuBC,MAAO,CAAEwB,aAAc,UAC5D,SAAC,IAAD,CACEzB,KAAK,uCACLC,MAAO,CAAEwB,aAAc,WAEzB,kBAAMC,SAnCM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACbC,EAAQF,EAAKG,SAASD,MAAME,MAC5BC,EAAWL,EAAKG,SAASE,SAASD,MAEnB,KAAjBF,EAAMI,QAAqC,KAApBD,EAASC,QAKpCb,GACEc,EAAAA,EAAAA,IAAM,CACJL,MAAOA,EACPG,SAAUA,KAIdL,EAAKQ,SAXHC,EAAAA,GAAAA,KAAW,4BAYd,EAgB4BrC,MAAO,CAAEsC,QAAS,cAA3C,WACE,SAAC,EAAAC,EAAD,CACE3B,MAAM,SACNC,KAAK,QACLC,KAAK,QACLE,MAAM,sBAER,SAAC,EAAAuB,EAAD,CACE3B,MAAM,YACNC,KAAK,WACLC,KAAK,WACLE,MAAM,yBAGR,SAAC,IAAD,CAAQH,KAAK,SAASb,MAAO,CAAEwC,UAAW,QAA1C,yBAMP,C","sources":["components/Description/Description.styled.js","components/Description/Description.jsx","components/Heading/Heading.styled.js","components/Heading/Heading.jsx","components/Input/Input.styled.js","components/Input/Input.jsx","pages/SignInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageDescription = styled.h2`\n  font-family: 'Roboto';\n  font-size: 24px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import { PageDescription } from './Description.styled';\n\nexport function Description({ text, style }) {\n  return <PageDescription style={style}>{text}</PageDescription>;\n}\n","import styled from 'styled-components';\n\nexport const PageHeading = styled.h2`\n  font-family: 'Roboto';\n  font-size: 32px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n","import { PageHeading } from './Heading.styled';\n\nexport function Heading({ text, style }) {\n  return <PageHeading style={style}>{text}</PageHeading>;\n}\n","import styled from 'styled-components';\nimport { vars } from 'constants/varialbles';\n\nexport const StyledLabel = styled.label`\n  display: block;\n  margin-bottom: 16px;\n\n  font-family: 'Roboto';\n  font-size: 20px;\n  font-weight: 400;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 400px;\n  height: 48px;\n  padding: 2px 24px;\n  margin-top: 8px;\n\n  font-family: 'Roboto';\n  font-size: 24px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.primaryText};\n  background-color: ${({ theme }) => theme.colors.appBg};\n\n  border: 2px solid\n    ${({ theme, defaultValue }) =>\n      defaultValue ? vars.accentColor : theme.colors.borderGrey};\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.smoothBlue};\n  }\n\n  &::placeholder {\n    font-size: 19px;\n  }\n`;\n","import { StyledLabel, StyledInput } from './Input.styled';\n\nexport function Input({\n  label,\n  type,\n  name,\n  pattern,\n  title,\n  required,\n  defaultValue,\n}) {\n  return (\n    <StyledLabel>\n      {label}\n      <StyledInput\n        type={type}\n        name={name}\n        pattern={pattern}\n        title={title}\n        required={required}\n        defaultValue={defaultValue}\n      />\n    </StyledLabel>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { useAuth } from 'hooks/useAuth'; // CLEAR LATER\nimport { Helmet } from 'react-helmet-async';\nimport { Heading } from 'components/Heading/Heading';\nimport { Description } from 'components/Description/Description';\nimport { Input } from 'components/Input/Input';\nimport { Button } from 'components/Button/Button';\nimport { toast } from 'react-toastify';\n\nexport default function SignInPage() {\n  const { isLoggedIn } = useAuth(); //CLEAR LATER\n  const dispatch = useDispatch();\n\n  const onLogIn = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    if (email.trim() === '' || password.trim() === '') {\n      toast.info('Please fill in all fields');\n      return;\n    }\n\n    dispatch(\n      logIn({\n        email: email,\n        password: password,\n      })\n    );\n\n    form.reset();\n  };\n\n  if (isLoggedIn) {\n    return <Navigate to=\"/contacts\" />;\n  } // CLEAR LATER\n\n  return (\n    <>\n      <Helmet>\n        <title>Log In</title>\n      </Helmet>\n      <Heading text=\"LOG IN INTO YOUR APP\" style={{ marginBottom: '8px' }} />\n      <Description\n        text=\"PLEASE ENTER YOUR EMAIL AND PASSWORD\"\n        style={{ marginBottom: '20px' }}\n      />\n      <form onSubmit={onLogIn} style={{ padding: '16px 177px' }}>\n        <Input\n          label=\"Email:\"\n          type=\"email\"\n          name=\"email\"\n          title=\"Enter Your email\"\n        />\n        <Input\n          label=\"Password:\"\n          type=\"password\"\n          name=\"password\"\n          title=\"Enter Your password\"\n        />\n\n        <Button type=\"submit\" style={{ marginTop: '40px' }}>\n          Log In\n        </Button>\n      </form>\n    </>\n  );\n}\n"],"names":["PageDescription","styled","theme","colors","secondaryText","Description","text","style","PageHeading","primaryText","Heading","StyledLabel","StyledInput","appBg","defaultValue","vars","borderGrey","smoothBlue","Input","label","type","name","pattern","title","required","SignInPage","isLoggedIn","useAuth","dispatch","useDispatch","to","marginBottom","onSubmit","event","preventDefault","form","currentTarget","email","elements","value","password","trim","logIn","reset","toast","padding","I","marginTop"],"sourceRoot":""}