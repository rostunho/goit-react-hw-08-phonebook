{"version":3,"file":"static/js/114.36560c34.chunk.js","mappings":"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","sources":["components/Description/Description.styled.js","components/Description/Description.jsx","redux/contacts/selectors.js","redux/filter/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageDescription = styled.h2`\n  font-family: 'Roboto';\n  font-size: 24px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import { PageDescription } from './Description.styled';\nimport PropTypes from 'prop-types';\n\nexport function Description({ text, style }) {\n  return <PageDescription style={style}>{text}</PageDescription>;\n}\n\nDescription.propTypes = {\n  text: PropTypes.string.isRequired,\n  style: PropTypes.object,\n};\n","export const selectAllContacts = state => state.contacts.items;\n\nexport const selectContactById = state => state.items();\n","export const selectFilterValue = state => state.filter;\n","import styled from 'styled-components';\nimport { vars } from 'constants/varialbles';\nimport { MdRemove, MdEdit } from 'react-icons/md';\n\nexport const ContactBody = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0 24px 0 220px;\n  overflow: hidden;\n\n  height: 96px;\n  border: 2px solid ${({ theme }) => theme.colors.outsideBg};\n  border-radius: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 0 0 2px 0;\n  font-family: 'Roboto';\n  font-size: 32px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const Phone = styled.p`\n  margin: 0;\n  font-family: 'Roboto';\n  font-size: 24px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n\nexport const Controls = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n`;\n\nexport const ControlItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 16px;\n  }\n`;\n\nexport const ControlButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 48px;\n  height: 48px;\n  outline: none;\n\n  border: none;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.controlsGrey};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${props =>\n      props.delete ? vars.dangerRed : vars.accentColor};\n  }\n`;\n\nexport const RemoveIcon = styled(MdRemove)`\n  color: ${({ theme }) => theme.colors.appBg};\n`;\n\nexport const EditIcon = styled(MdEdit)`\n  color: ${({ theme }) => theme.colors.appBg};\n`;\n","import {\n  ContactBody,\n  Name,\n  Phone,\n  Controls,\n  ControlItem,\n  ControlButton,\n  RemoveIcon,\n  EditIcon,\n} from './Contact.styled';\nimport { Avatar } from 'components/Avatar/Avatar';\nimport PropTypes from 'prop-types';\n\nexport function Contact({ contact, handleRemove, handleUpdate }) {\n  return (\n    <ContactBody>\n      <Avatar size=\"244\" style={{ position: 'absolute', left: '-48' }} />\n      <div>\n        <Name>{contact.name}</Name>\n        <Phone>{contact.number}</Phone>\n      </div>\n\n      <Controls>\n        <ControlItem>\n          <ControlButton\n            type=\"button\"\n            title=\"Edit Contact\"\n            onClick={() =>\n              handleUpdate(contact.id, contact.name, contact.number)\n            }\n          >\n            <EditIcon size=\"28\" />\n          </ControlButton>\n        </ControlItem>\n        <ControlItem>\n          <ControlButton\n            delete\n            type=\"button\"\n            title=\"Delete Contact\"\n            onClick={() => handleRemove(contact.id)}\n          >\n            <RemoveIcon size=\"88\" />\n          </ControlButton>\n        </ControlItem>\n      </Controls>\n    </ContactBody>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  handleUpdate: PropTypes.func.isRequired,\n};\n","import { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { Helmet } from 'react-helmet-async';\nimport { Contact } from 'components/Contact/Contact';\nimport { Description } from 'components/Description/Description';\n\nimport { useLocation } from 'react-router-dom';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectAllContacts);\n  const filterValue = useSelector(selectFilterValue);\n  const location = useLocation();\n  const listEndRef = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const contactListIsEmpty = contacts.length === 0;\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (location?.state?.from !== '/contacts/new') {\n      return;\n    }\n\n    listEndRef.current?.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest',\n    });\n  }, [contacts, location]);\n\n  const handleUpdate = (id, name, number) => {\n    navigate(`/contacts/${id}/${name}/${number}`);\n  };\n\n  const handleRemove = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const normalizedFilter = filterValue.toLowerCase().trim();\n  const visibleContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().trim().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      {contactListIsEmpty && (\n        <Description\n          text=\"YOUR CONTACT LIST IS EMPTY YET\"\n          style={{ marginTop: '120px' }}\n        />\n      )}\n\n      <ul>\n        {visibleContacts !== [] &&\n          visibleContacts.map(contact => (\n            <li key={contact.id}>\n              <Contact\n                contact={contact}\n                handleUpdate={handleUpdate}\n                handleRemove={handleRemove}\n              />\n            </li>\n          ))}\n        <div ref={listEndRef} />\n      </ul>\n    </>\n  );\n}\n"],"names":["PageDescription","styled","theme","colors","secondaryText","Description","text","style","selectAllContacts","state","contacts","items","selectFilterValue","filter","ContactBody","outsideBg","Name","primaryText","Phone","Controls","ControlItem","ControlButton","controlsGrey","props","delete","vars","RemoveIcon","MdRemove","appBg","EditIcon","MdEdit","Contact","contact","handleRemove","handleUpdate","Avatar","size","position","left","name","number","type","title","onClick","id","ContactsPage","useSelector","filterValue","location","useLocation","listEndRef","useRef","dispatch","useDispatch","navigate","useNavigate","contactListIsEmpty","length","useEffect","fetchContacts","from","current","scrollIntoView","behavior","block","inline","deleteContact","normalizedFilter","toLowerCase","trim","visibleContacts","includes","marginTop","map","ref"],"sourceRoot":""}