{"version":3,"file":"static/js/842.ffc8058e.chunk.js","mappings":"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","sources":["components/Description/Description.styled.js","components/Description/Description.jsx","components/Heading/Heading.styled.js","components/Heading/Heading.jsx","components/Input/Input.styled.js","components/Input/Input.jsx","constants/validation.js","pages/ContactDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageDescription = styled.h2`\n  font-family: 'Roboto';\n  font-size: 24px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import { PageDescription } from './Description.styled';\nimport PropTypes from 'prop-types';\n\nexport function Description({ text, style }) {\n  return <PageDescription style={style}>{text}</PageDescription>;\n}\n\nDescription.propTypes = {\n  text: PropTypes.string.isRequired,\n  style: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const PageHeading = styled.h2`\n  font-family: 'Roboto';\n  font-size: 32px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n","import { PageHeading } from './Heading.styled';\nimport PropTypes from 'prop-types';\n\nexport function Heading({ text, style }) {\n  return <PageHeading style={style}>{text}</PageHeading>;\n}\n\nHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n  style: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { vars } from 'constants/varialbles';\n\nexport const StyledLabel = styled.label`\n  display: block;\n  margin-bottom: 16px;\n\n  font-family: 'Roboto';\n  font-size: 20px;\n  font-weight: 400;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 400px;\n  height: 48px;\n  margin-top: 8px;\n  padding: 2px 24px;\n\n  font-family: 'Roboto';\n  font-size: 24px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.primaryText};\n  background-color: ${({ theme }) => theme.colors.appBg};\n\n  border: 2px solid\n    ${({ theme, defaultValue }) =>\n      defaultValue ? vars.accentColor : theme.colors.borderGrey};\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.smoothBlue};\n  }\n\n  &::placeholder {\n    font-size: 19px;\n  }\n`;\n","import { StyledLabel, StyledInput } from './Input.styled';\nimport PropTypes from 'prop-types';\n\nexport function Input({\n  label,\n  type,\n  name,\n  pattern,\n  title,\n  required,\n  defaultValue,\n}) {\n  return (\n    <StyledLabel>\n      {label}\n      <StyledInput\n        type={type}\n        name={name}\n        pattern={pattern}\n        title={title}\n        required={required}\n        defaultValue={defaultValue}\n      />\n    </StyledLabel>\n  );\n}\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n  defaultValue: PropTypes.string,\n};\n","export const validation = Object.freeze({\n  text: {\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  tel: {\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n});\n","import { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\nimport { Helmet } from 'react-helmet-async';\nimport { toast } from 'react-toastify';\nimport { Heading } from 'components/Heading/Heading';\nimport { Description } from 'components/Description/Description';\nimport { Container } from 'components/Container/Container';\nimport { Avatar } from 'components/Avatar/Avatar';\nimport { Input } from 'components/Input/Input';\nimport { Button } from 'components/Button/Button';\nimport { vars } from 'constants/varialbles';\nimport { validation } from 'constants/validation';\n\nexport default function ContactDetailsPage() {\n  const { id, name, number } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleUpdateContact = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (name.trim() === '' || number.trim() === '') {\n      toast.info('Pleas fill in all fields');\n      return;\n    }\n    dispatch(\n      updateContact({\n        id,\n        name: name,\n        number: number,\n      })\n    );\n\n    navigate('/contacts');\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Edit Contact</title>\n      </Helmet>\n      <Heading text=\"EDIT CONTACT\" style={{ marginBottom: '8px' }} />\n      <Description\n        text=\"CHANGE YOUR CONTACTS NAME OR PHONE\"\n        style={{ marginBottom: '20px' }}\n      />\n      <Container flex width=\"100%\">\n        <Avatar border color={vars.accentColor} size=\"300px\" />\n        <form\n          onSubmit={handleUpdateContact}\n          style={{ marginLeft: 'auto', paddingTop: '12px' }}\n        >\n          <Input\n            label=\"Name:\"\n            type=\"text\"\n            name=\"name\"\n            defaultValue={name}\n            pattern={validation.text.pattern}\n            title={validation.text.title}\n          />\n          <Input\n            label=\"Phone:\"\n            type=\"tel\"\n            name=\"number\"\n            defaultValue={number}\n            pattern={validation.tel.pattern}\n            title={validation.tel.title}\n          />\n          <Button type=\"submit\" style={{ marginTop: '40px' }}>\n            SAVE\n          </Button>\n        </form>\n      </Container>\n    </>\n  );\n}\n"],"names":["PageDescription","styled","theme","colors","secondaryText","Description","text","style","PageHeading","primaryText","Heading","StyledLabel","StyledInput","appBg","defaultValue","vars","borderGrey","smoothBlue","Input","label","type","name","pattern","title","required","validation","Object","freeze","tel","ContactDetailsPage","useParams","id","number","navigate","useNavigate","dispatch","useDispatch","marginBottom","flex","width","border","color","size","onSubmit","event","preventDefault","form","currentTarget","elements","value","trim","updateContact","toast","marginLeft","paddingTop","I","marginTop"],"sourceRoot":""}